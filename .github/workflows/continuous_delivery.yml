name: Continuous Delivery

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Release to GitHub
        id: semantic-releases
        uses: cycjimmy/semantic-release-action@v2.5.4
        with:
          semantic_version: 18.0.0
          extra_plugins: |
            @semantic-release/changelog@5.0.1
            @semantic-release/git
          branches: |
            ['main']
        env:
          GITHUB_TOKEN: ${{ secrets._GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        if: steps.semantic-releases.outputs.new_release_published == 'true'
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/sqlite3-local-backups
          tags: |
            type=semver,pattern={{version}},value=${{ steps.semantic-releases.outputs.new_release_version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.semantic-releases.outputs.new_release_version }}
            type=semver,pattern={{major}},value=${{ steps.semantic-releases.outputs.new_release_version }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        if: steps.semantic-releases.outputs.new_release_published == 'true'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: steps.semantic-releases.outputs.new_release_published == 'true'

      - name: Build and Publish to Docker Hub
        uses: docker/build-push-action@v5
        if: steps.semantic-releases.outputs.new_release_published == 'true'
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
